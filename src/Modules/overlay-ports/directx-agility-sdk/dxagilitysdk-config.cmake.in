get_filename_component(_dxagilitysdk_root "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_dxagilitysdk_root "${_dxagilitysdk_root}" PATH)
get_filename_component(_dxagilitysdk_root "${_dxagilitysdk_root}" PATH)

if (EXISTS "${_dxagilitysdk_root}/bin/D3D12Core.dll")
  
  find_library(_dxagilitysdk_root_lib NAMES d3d12)

  if("${_dxagilitysdk_root_lib}" STREQUAL "_dxagilitysdk_root_lib-NOTFOUND")
    message(FATAL_ERROR "Could not find d3d12.lib. Make sure a recent Windows SDK version is properly installed on the system.")
  endif()

  add_library(Microsoft::DirectXAgilitySDK SHARED IMPORTED)
  set_target_properties(Microsoft::DirectXAgilitySDK PROPERTIES
      IMPORTED_LOCATION                    "${_dxagilitysdk_root}/bin/D3D12Core.dll"
      IMPORTED_IMPLIB                      "${_dxagilitysdk_root_lib}"
      INTERFACE_INCLUDE_DIRECTORIES        "${_dxagilitysdk_root}/include"
      IMPORTED_LINK_INTERFACE_LANGUAGES    "C")
  
  # ... because for some reason the build system refuses to copy the DLLs over (probably since they are already available in 
  # a system directory and it does not take into account, that they are different).
  if (NOT TARGET dxagilitysdkbinaries)
    add_custom_target(dxagilitysdkbinaries
        COMMENT "Copy DirectX Agility SDK binaries..."
        COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/d3d12/"
    )
    add_custom_command(TARGET dxagilitysdkbinaries POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_if_different "${_dxagilitysdk_root}/bin/D3D12Core.dll" "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/d3d12/"
    )
    add_custom_command(TARGET dxagilitysdkbinaries POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_if_different "${_dxagilitysdk_root}/bin/d3d12SDKLayers.dll" "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/d3d12/"
    )

    install(FILES "${_dxagilitysdk_root}/bin/D3D12Core.dll" "${_dxagilitysdk_root}/bin/d3d12SDKLayers.dll" DESTINATION "${CMAKE_INSTALL_BINARY_DIR}/d3d12/")
  endif()

  add_dependencies(Microsoft::DirectXAgilitySDK dxagilitysdkbinaries)

  set(dxagilitysdk_FOUND TRUE)
else()
  set(dxagilitysdk_FOUND FALSE)
endif()

unset(_dxagilitysdk_root)