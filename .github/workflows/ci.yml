# Copyright (c) 2023 Carsten Rudolph
name: Verify Build

on:
  workflow_dispatch:
    inputs:
      uploadArtifacts:
        description: 'Upload Artifacts'
        required: true
        default: 'false'
      signArtifacts:
        description: 'Attempt Code Sign'
        required: true
        default: 'false'
        
  pull_request:
    branches:
      - main
    types:
    - opened
    - reopened
    - synchronize
    - ready_for_review

env:
  vulkanSdkVersion: '1.3.268.0'
  mesaDriverVersion: '24.0.6'

jobs:
  job:
    name: ${{ matrix.os }}-ci
    runs-on: ${{ matrix.os }}
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        include:
          - os: windows-latest
            triplet: x64-windows
            configuration: windows-x64-test
            architecture: x64

    steps:
      - name: Checking out sources
        uses: actions/checkout@master
        with:
          submodules: true

      - name: Setup build environment
        id: setup-environment
        run: |
          echo "VCPKG_FEATURE_FLAGS=manifests" >> $env:GITHUB_ENV

      - name: Setup Vulkan SDK 
        uses: humbletim/install-vulkan-sdk@v1.1.1
        with:
          version: ${{ env.vulkanSdkVersion }}
          cache: true

      - name: Download Mesa3D driver
        uses: robinraju/release-downloader@v1.10
        with:
          repository: 'pal1000/mesa-dist-win'
          tag: '${{ env.mesaDriverVersion }}'
          fileName: 'mesa3d-24.1.0-rc1-release-msvc.7z'
          #fileName: 'mesa3d-${{ env.mesaDriverVersion }}-release-msvc.7z'
          out-file-path: 'dep/mesa/'  # ${{ github.workspace }} is prefixed automatically.
          extract: false  # 7zip is not supported by this extension, so we have to do it on our own later.
          
      # TODO: Use 7zip x '${{ github.workspace }}/dep/mesa/mesa3d-${{ env.mesaDriverVersion }}-rc1-release-msvc.7z'
      - name: Install Mesa3D driver
        working-directory: '${{ github.workspace }}/dep/mesa/'
        run: |
            7zip x 'mesa3d-24.1.0-rc1-release-msvc.7z'
            reg add "HKLM\SOFTWARE\Khronos\Drivers" /v '${{ github.workspace }}/dep/mesa/x64/lvp_icd.x86_64.json' /t REG_DWORD /d 0
            reg add "HKLM\SOFTWARE\WOW6432Node\Khronos\Drivers" /v '${{ github.workspace }}/dep/mesa/x64/lvp_icd.x86_64.json' /t REG_DWORD /d 0

      - name: Retrieve latest CMake build
        uses: lukka/get-cmake@latest

      - name: Restore or build vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgDirectory: '${{ github.workspace }}/src/Modules/vcpkg'
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: Build with CMake and Ninja
        id: build-with-cmake
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/src/CMakeLists.txt'
          configurePreset: '${{ matrix.configuration }}'
          buildPreset: '${{ matrix.configuration }}'
          
      - name: Install with CMake
        run: |
          Set-Location '${{ github.workspace }}/out/build/${{ matrix.configuration }}'
          cmake --install .
          
      - name: Sign binaries
        if: ${{ github.event.inputs.signArtifacts == 'true' }}
        uses: dlemstra/code-sign-action@v1
        with:
          certificate: '${{ secrets.SIGN_CERTIFICATE_BASE64 }}'
          password: '${{ secrets.SIGN_CERTIFICATE_PASSWORD }}'
          folder: '${{ github.workspace }}/out/install/'
          recursive: true

      - name: Upload install artifacts
        if: ${{ github.event.inputs.uploadArtifacts == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: LiteFX-${{ matrix.triplet }}-install
          path: '${{ github.workspace }}/out/install/${{ matrix.configuration }}'
